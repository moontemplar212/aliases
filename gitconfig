[alias]
	aa = add --all
	alias = config --get-regexp ^alias\\.
	b = branch
	bc = "!f() { git branch --contains \"$1\"; }; f"
	bd = branch -D
	ca = commit --amend
	caa = commit -a --amend -C HEAD
	cb = checkout -b
	cl = clean -fd
	cleanslate = "!f() { git cl && git reset --hard HEAD && git checkout . -f; }; f"
	cm = commit -m
	cma = commit -a -m
	cmap = "!f() { git aa && git commit -a -m \"$1\" && git push; }; f"
	cmapnv = "!f() { git aa && git commit -a -m \"$1\" --no-verify && git push; }; f"
	cmp = "!f() { git commit -m \"$1\" && git push; }; f"
	cmav = "!f() { git aa && git commit -m \"$1\" --no-verify; }; f"
	cmv = "!f() { git commit -m \"$1\" --no-verify; }; f"
	cn = clean -n
	co = checkout
	cp = "!f() { git checkout \"$1\" && git pull; }; f"
	cu = "!f() { git fetch -p && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -d; }; f"
	dev = "!f() { git cleanslate && git fetch origin develop && git checkout develop && git pull; }; f"
	difc = diff HEAD --color-words
	difl = diff HEAD^ --color-words
	difs = diff --staged --color-words
	fc = !git fetch origin && git checkout
	fa = fetch --all
	gfp = fetch --prune
	first = "!git log --oneline \"$1\" | tail -n 1 #"
	hide = stash
	hist = log --oneline -M --stat --follow
	linhit = "!f() { git log -L $1,$2:$3; }; f"
	lmsg = log -n 1 --pretty=format:'%s%n%n%b'
	lsd = log -p
	lsum = log -n 1 --pretty=format:'%s'
	lt = describe --tags --abbrev=0
	master = "!f() { git cleanslate && git fetch origin master && git checkout master && git pull; }; f"
	ms = "!git merge --squash \"$1\""
	name = !git name-rev $1
	new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
	p = push
	pa = pull --all
	parent = "!git log \"$1\"^ -1 #"
	pl = pull
	plo = pull origin
	poc = "!f() { git pull origin \"$(git branch --show-current)\""
	pnb = "!git push -u origin \"$(git branch --show-current)\""
	r = restore
	ra = restore .
	rast = restore . --staged
	rename = branch -m
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rn = "!git reset HEAD~\"$1\""
	rh = reset --hard HEAD
	rh1 = reset --hard HEAD^
	rh2 = reset --hard HEAD^^
	rhc = "!f() { git reset --hard $1; }; f"
	rs = reset --soft HEAD
	rsc = "!f() { git reset --soft $1; }; f"
	s = status
	st = stash
	stb = stash branch
	stp = stash pop
	unstage = reset --soft HEAD^
	updater = update-git-for-windows
	whenadded = log --diff-filter=A
	gud = "!f() { echo -e \"\nmessage\"; }; f"